import { BigFloatBase } from './BigFloatBase';
import { BigFloat32 } from './BigFloat32';
import { BigFloat53 } from './BigFloat53';
export declare class BigComplex<Base extends BigFloatBase<Base>> {
    constructor(real?: Base | number | string, imag?: Base | number | string, base?: number);
    clone(): this;
    setZero(): this;
    setValue(other: BigComplex<Base>): this;
    mul(multiplier: number | Base | BigComplex<Base>, product?: BigComplex<Base>): BigComplex<Base>;
    sqr(product?: BigComplex<Base>): BigComplex<Base>;
    add(addend: number | Base | BigComplex<Base>, sum?: BigComplex<Base>): BigComplex<Base>;
    sub(subtrahend: number | Base | BigComplex<Base>, difference?: BigComplex<Base>): BigComplex<Base>;
    truncate(fractionLimbCount: number): this;
    Base: new (x?: Base | number | string, base?: number) => Base;
    real: Base;
    imag: Base;
    temp1: Base;
    temp2: Base;
}
export declare class BigComplex32 extends BigComplex<BigFloat32> {
}
export declare class BigComplex53 extends BigComplex<BigFloat53> {
}
